[
  {
    "objectID": "posts/getting-rstudio-server-on-wsl2/index.html",
    "href": "posts/getting-rstudio-server-on-wsl2/index.html",
    "title": "Getting RStudio Server on WSL2",
    "section": "",
    "text": "Photo by Sai Kiran Anagani on StockSnap"
  },
  {
    "objectID": "posts/getting-rstudio-server-on-wsl2/index.html#introduction",
    "href": "posts/getting-rstudio-server-on-wsl2/index.html#introduction",
    "title": "Getting RStudio Server on WSL2",
    "section": "Introduction",
    "text": "Introduction\nAs a developer from a background with .NET and Microsoft tools, it comes as no surprise that I use Windows as my development platform. However, developing on Windows has never been better. The Windows Subsystem for Linux (WSL) allows a developer to essentially to right at home with linux, arguably the best contemporary platform for developing.\nAs an R user, being able to develop on the linux platform and using RStudio IDE as a Windows users is a winning prospect. Fortunately, this has been made possible by RStudio and they wrote a lenthly blog post.\nMy blog post is just a brief outline of steps and references for getting RStudio server on WSL2."
  },
  {
    "objectID": "posts/getting-rstudio-server-on-wsl2/index.html#pre-requisites",
    "href": "posts/getting-rstudio-server-on-wsl2/index.html#pre-requisites",
    "title": "Getting RStudio Server on WSL2",
    "section": "Pre-requisites",
    "text": "Pre-requisites\nThis blog will assume the following as pre-requisites. Namely, WSL2, Ubuntu, and R have been installed successfully.\n\nConfigure WSL2 and Ubuntu - Link\nInstall R on WSL2 - Link"
  },
  {
    "objectID": "posts/getting-rstudio-server-on-wsl2/index.html#installing-rstudio",
    "href": "posts/getting-rstudio-server-on-wsl2/index.html#installing-rstudio",
    "title": "Getting RStudio Server on WSL2",
    "section": "Installing RStudio",
    "text": "Installing RStudio\nFor a more lengthy outline of the following steps, I encourage the reader to follow Gary Ritchie’s blog post here.\nInstall RStudio Server is extremely straight forward as possible. Enter the following command in WSL2:\nwget https://rstudio.org/download/latest/stable/server/bionic/rstudio-server-latest-amd64.deb sudo gdebi rstudio-server-latest-amd64.deb\nAdditionally, you can use the server itself by the accessing RStudio on your web browser at the url http://localhost:8787. You will need to enter in your your username and password that is used for the linux system on WSL."
  },
  {
    "objectID": "posts/getting-rstudio-server-on-wsl2/index.html#using-rstudio-server-on-wsl2",
    "href": "posts/getting-rstudio-server-on-wsl2/index.html#using-rstudio-server-on-wsl2",
    "title": "Getting RStudio Server on WSL2",
    "section": "Using RStudio server on WSL2",
    "text": "Using RStudio server on WSL2\nYou can start the server with sudo rstudio-server start and stop with sudo rstudio-server stop. It is that simple."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I’m a seasoned Senior Machine Learning Engineer at Artisight and an Adjunct Professor at Kansas State University, with a decade of hands-on experience solving real-world business problems through machine learning, software engineering, and data analytics. I also enjoy teaching, mentoring, and exploring new research."
  },
  {
    "objectID": "about.html#domain-expertise",
    "href": "about.html#domain-expertise",
    "title": "About Me",
    "section": "Domain Expertise",
    "text": "Domain Expertise\n\nAI Systems Engineering\n\nMLOps & Automation\n\nApplied Research & Technical Leadership"
  },
  {
    "objectID": "about.html#technical-proficiences",
    "href": "about.html#technical-proficiences",
    "title": "About Me",
    "section": "Technical Proficiences",
    "text": "Technical Proficiences\n\nAI Engineer Stack\n\nPython\nLabelStudio\nTriton\nClearML\nKafka\nPostgresql\nTeradata\nS3\nDebian\nHailo\n\nMLOps\n\nGithub\nDocker\nAnsible\nTerraform\nAWS EC2\n\nWorkbench\n\nVS Code\nVim\nJupyterhub Notebook\nUbuntu/WSL2\nJira\nConfluence"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Heath’s Mindware",
    "section": "",
    "text": "Getting Started with K3s Fast\n\n\n\n\n\n\nk3s\n\n\nkubernetes\n\n\n\n\n\n\n\n\n\nMar 9, 2025\n\n\nHeath Yates\n\n\n\n\n\n\n\n\n\n\n\n\nGetting RStudio Server on WSL2\n\n\n\n\n\n\nR\n\n\nWSL2\n\n\n\n\n\n\n\n\n\nFeb 5, 2022\n\n\nHeath Yates\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#what-is-kubernetes",
    "href": "posts/getting-started-with-k3s-fast/index.html#what-is-kubernetes",
    "title": "Getting Started with K3s Fast",
    "section": "What is kubernetes",
    "text": "What is kubernetes\nIn brief, kubernetes (k8s) is an open source platform designed to automate how containerized applications can be deployed, scaled, and managed. In addition, it has some very handy orchestration to handle what happens if a container or pod goes down such that it can spin up the application on an available node."
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html",
    "href": "posts/getting-started-with-k3s-fast/index.html",
    "title": "Getting Started with K3s Fast",
    "section": "",
    "text": "Generated using DALLE. Prompt and design by Heath Yates"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#introduction",
    "href": "posts/getting-started-with-k3s-fast/index.html#introduction",
    "title": "Getting Started with K3s Fast",
    "section": "Introduction",
    "text": "Introduction\nK3s is a lightweight k8s distribution created by Rancher Labs. It abstracts the complexity normally associated with k8s by allowing the reader the ability to install kubernetes with a single binary. Compared to other K8s solutions such as microk8s, K3s was chosen for it’s small size and ease of installation. For further reading, please see the official documents here. In addition, here is a concise explaination of k8s. The beauty of k3s is a core single binary installation that allows the user to install k8s core components without requiring a deep knowledge of the underlaying concepts of k8s. The goal is to align with the official documents, but aims to be a conscise, fast, and two node installation."
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#components-of-k3s",
    "href": "posts/getting-started-with-k3s-fast/index.html#components-of-k3s",
    "title": "Getting Started with K3s Fast",
    "section": "Components of k3s",
    "text": "Components of k3s\nK3s contains only the core components of a kubernetes cluster such as the following:"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#references",
    "href": "posts/getting-started-with-k3s-fast/index.html#references",
    "title": "Getting Started with K3s Fast",
    "section": "References",
    "text": "References\n\nMarkdown notes for installing ks\nk3s official documentation"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#caveats",
    "href": "posts/getting-started-with-k3s-fast/index.html#caveats",
    "title": "Getting Started with K3s Fast",
    "section": "Caveats",
    "text": "Caveats\nThis instruction assumes that you have two machines. One will be the server or primary node. The other node will be the secondary node or secondary node. It is beyond the scope of this article to walk through a single node deployment."
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#k3s-installation",
    "href": "posts/getting-started-with-k3s-fast/index.html#k3s-installation",
    "title": "Getting Started with K3s Fast",
    "section": "K3s Installation",
    "text": "K3s Installation\nFirst, let us make sure each machine has the system updates:\n    sudo apt-get update\n    sudo apt-get upgrade -y\n    sudo reboot\nSecond, on the each node we install it as follows:\n    sudo apt install curl\n    curl -sfL https://get.k3s.io | sh - systemctl status k3s"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#verifying-that-things-work",
    "href": "posts/getting-started-with-k3s-fast/index.html#verifying-that-things-work",
    "title": "Getting Started with K3s Fast",
    "section": "Verifying that things work",
    "text": "Verifying that things work\nYou can run this command on the server or primary node:\nsudo k3s kubectl get nodes"
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#what-is-a-node-token",
    "href": "posts/getting-started-with-k3s-fast/index.html#what-is-a-node-token",
    "title": "Getting Started with K3s Fast",
    "section": "What is a node token?",
    "text": "What is a node token?\nA node token is a shared secret that is used by agent nodes to authenticate to the K3s primary node or K3s server. Without this token, it cannot join the network."
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#summary",
    "href": "posts/getting-started-with-k3s-fast/index.html#summary",
    "title": "Getting Started with K3s Fast",
    "section": "Summary",
    "text": "Summary\nThe reader should now be able to install k3s fast."
  },
  {
    "objectID": "posts/getting-started-with-k3s-fast/index.html#k3s-secondary-node",
    "href": "posts/getting-started-with-k3s-fast/index.html#k3s-secondary-node",
    "title": "Getting Started with K3s Fast",
    "section": "K3s Secondary Node",
    "text": "K3s Secondary Node\nIn addition to the above, we need to have our secondary node be set up as an agent node. First, on the server node run this command:\nsudo cat /var/lib/rancher/k3s/server/node-token\nSecond, on the secondary node do the following:\ncurl -sfL https://get.k3s.io | K3S_URL=https://&lt;SERVER_NODE_IP&gt;:6443 K3S_TOKEN=&lt;INSERT_TOKEN_HERE&gt; sh -\nFor example, we might have something like this to add on the secondary node:\ncurl -sfL https://get.k3s.io | K3S_URL=https://192.168.1.10:6443 K3S_TOKEN=K10abc::server:xyz sh -"
  }
]